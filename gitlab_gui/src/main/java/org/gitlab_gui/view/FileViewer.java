package org.gitlab_gui.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.gitlab_gui.Utils;
import org.gitlab_gui.controller.Controller;
import org.gitlab_gui.model.RepoFile;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Map;

public class FileViewer {
    private JPanel mainPanel;
    private JTextArea textArea;
    private JScrollPane scrollPane;
    private JButton updateFileButton;

    private final String content;
    private String originalContent;
    private final RepoFile file;
    private final String branch;

    public FileViewer(String content, String branch, RepoFile file) {
        this.content = content;
        this.originalContent = content;

        this.branch = branch;
        this.file = file;

        JFrame frame = new JFrame("File viewer");
        $$$setupUI$$$();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setPreferredSize(new Dimension(850, 600));
        frame.pack();
        frame.setLocationRelativeTo(null);

        frame.add(mainPanel);

        frame.setVisible(true);
    }


    private void createUIComponents() {
        textArea = new JTextArea();
        textArea.setEditable(true);

        textArea.setText(content);

        // check text area for changes
        textArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateFileButton.setEnabled(!textArea.getText().equals(originalContent));
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateFileButton.setEnabled(!textArea.getText().equals(originalContent));
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateFileButton.setEnabled(!textArea.getText().equals(originalContent));
            }
        });

        updateFileButton = new JButton("Update file");
        updateFileButton.setEnabled(false);

        updateFileButton.addActionListener(e -> {
            String commitMessage = "Update file: " + file.getFile_name();

            ArrayList<Map<String, Object>> actions = new ArrayList<>();
            actions.add(Utils.createUpdateAction(file.getFile_path(), Base64.getEncoder().encodeToString(textArea.getText().getBytes())));

            Map<String, Object> payload = Utils.createCommitPayload(commitMessage,
                    branch, actions);

            try {
                // we already have the controller instance
                Controller.getInstance().addCommit(payload);
                JOptionPane.showMessageDialog(null, "File updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

                updateFileButton.setEnabled(false);
                originalContent = textArea.getText();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error updating file", "Error", JOptionPane.ERROR_MESSAGE);
            }

        });


    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane = new JScrollPane();
        mainPanel.add(scrollPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane.setViewportView(textArea);
        mainPanel.add(updateFileButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
